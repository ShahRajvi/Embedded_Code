/*
 * stm32f446xx_SPI_driver.c
 *
 *  Created on: Jul 15, 2024
 *      Author: RShah23
 */

#include "stm32f446xx_SPI_driver.h"


/*********************************************************************
 * @fn      		  - SPI_PeriClockControl
 *
 * @brief             -	This function is for peripheral clock setup
 *
 * @param[in]         - *pSPIx // Base address of the SPI bus
 * @param[in]         - ENABLE or DISABLE
 *
 * @return      - None
 *
 * @Note        - None

 */

void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi){
	if(EnorDi == ENABLE){
				if(pSPIx == SPI1){
							SPI1_PCLK_EN();
						}
				if(pSPIx == SPI2){
							SPI2_PCLK_EN();
						}
				if(pSPIx == SPI3){
							SPI3_PCLK_EN();
						}
				if(pSPIx == SPI4){
							SPI4_PCLK_EN();
						}
				if(pSPIx == SPI5){
							SPI5_PCLK_EN();
						}
				if(pSPIx == SPI6){
							SPI6_PCLK_EN();
						}
			}

			if(EnorDi == DISABLE){
					if(pSPIx == SPI1){
								SPI1_PCLK_DI();
							}
					if(pSPIx == SPI2){
								SPI2_PCLK_DI();
							}
					if(pSPIx == SPI3){
								SPI3_PCLK_DI();
							}
					if(pSPIx == SPI4){
								SPI4_PCLK_DI();
							}
					if(pSPIx == SPI5){
								SPI5_PCLK_DI();
							}
					if(pSPIx == SPI6){
								SPI6_PCLK_DI();
							}
				}
}

/*********************************************************************
 * @fn      		  - SPI_Init
 *
 * @brief             -	This function is for peripheral clock setup
 *
 * @param[in]         - *pSPIx // Base address of the SPI bus
 * @param[in]         - ENABLE or DISABLE
 *
 * @return      - None
 *
 * @Note        - None

 */

void SPI_Init(SPI_Handle_t *pSPIHandle);
